<launch>
        <!-- Arguments -->
        <arg name="model" default="$(env TURTLEBOT3_MODEL)" doc="model type [burger, waffle, waffle_pi]"/>
        <arg name="map_file" default="$(find turtlebot3_navigation)/maps/map.yaml"/>
        <arg name="move_forward_only" default="false"/>
    
        <arg name="open_rviz" default="true"/>
        
        <arg name="first_tb3"  default="tb3_0"/>
        <arg name="second_tb3" default="tb3_1"/>
        <arg name="third_tb3"  default="tb3_2"/>
      
        <arg name="first_tb3_x_pos" default="-0.5"/>
        <arg name="first_tb3_y_pos" default="-0.5"/>
        <arg name="first_tb3_z_pos" default=" 0.0"/>
      
        <arg name="second_tb3_x_pos" default=" 0.5"/>
        <arg name="second_tb3_y_pos" default=" 0.5"/>
        <arg name="second_tb3_z_pos" default=" 0.0"/>
      
        <arg name="third_tb3_x_pos" default=" 0.5"/>
        <arg name="third_tb3_y_pos" default=" -0.5"/>
        <arg name="third_tb3_z_pos" default=" 0.0"/>
    
        <!-- Map Server -->
        <node pkg="map_server" name="map_server" type="map_server" args="$(arg map_file)"/>
        
        <!-- Gazebo Simulation -->
        <param name="/use_sim_time" value="true"/>
        <include file="$(find gazebo_ros)/launch/empty_world.launch">
            <arg name="world_name" value="$(find turtlebot3_gazebo)/worlds/turtlebot3_world.world"/>
            <arg name="paused" value="false"/>
            <arg name="use_sim_time" value="true"/>
            <arg name="gui" value="false"/>
            <arg name="headless" value="false"/>
            <arg name="debug" value="false"/>
        </include>  
    
        <group ns = "$(arg first_tb3)">
            <arg name="robot_name" value="$(arg first_tb3)"/>
            <!-- State publisher -->
            <param name="robot_description" command="$(find xacro)/xacro --inorder $(find turtlebot3_description)/urdf/turtlebot3_$(arg model).urdf.xacro" />
            <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher" output="screen">
                <param name="publish_frequency" type="double" value="50.0" />
                <param name="tf_prefix" value="$(arg robot_name)" />
            </node>
            <!-- URDF Spawner -->              
            <node name="spawn_urdf" pkg="gazebo_ros" type="spawn_model" args="-urdf -model $(arg robot_name) -x $(arg first_tb3_x_pos) -y $(arg first_tb3_y_pos) -z $(arg first_tb3_z_pos) -param robot_description" />
    
            <!-- AMCL -->
            <include file="$(find turtle_follow)/launch/include/amcl.xml">
                <arg name="robot_name"     value="$(arg robot_name)"/>
                <arg name="initial_pose_x" value="$(arg first_tb3_x_pos)"/>
                <arg name="initial_pose_y" value="$(arg first_tb3_y_pos)"/>
                <arg name="initial_pose_a" value="$(arg first_tb3_z_pos)"/>
            </include>
            <!-- move_base -->
            <node pkg="move_base" type="move_base" respawn="false" name="move_base" output="screen">
                <param name="base_local_planner" value="dwa_local_planner/DWAPlannerROS" />
                <rosparam file="$(find pheromone_map)/param/costmap_common_params_$(arg model).yaml" command="load" ns="global_costmap" />
                <rosparam file="$(find pheromone_map)/param/costmap_common_params_$(arg model).yaml" command="load" ns="local_costmap" />
                <rosparam file="$(find pheromone_map)/param/local_costmap_params.yaml" command="load" />
                <rosparam file="$(find pheromone_map)/param/global_costmap_params.yaml" command="load" />
                <rosparam file="$(find pheromone_map)/param/move_base_params.yaml" command="load" />
                <rosparam file="$(find pheromone_map)/param/dwa_local_planner_params_$(arg model).yaml" command="load" />
                
                <!-- Overwrite robot specific paramters -->
                <param name="global_costmap/obstacle_layer/scan/sensor_frame" value="$(arg robot_name)/base_scan" />
                <param name="global_costmap/obstacle_layer/scan/topic" value="/$(arg robot_name)/scan" />
                <param name="global_costmap/robot_base_frame" value="$(arg robot_name)/base_footprint" />
                <param name="local_costmap/obstacle_layer/scan/sensor_frame" value="$(arg robot_name)/base_scan" />
                <param name="local_costmap/obstacle_layer/scan/topic" value="/$(arg robot_name)/scan" />
                <param name="local_costmap/robot_base_frame" value="$(arg robot_name)/base_footprint" />
                <param name="local_costmap/global_frame" value="$(arg robot_name)/odom" />
                <param name="DWAPlannerROS/min_vel_x" value="0.0" if="$(arg move_forward_only)" />
            </node>
        </group>
        <group ns = "$(arg second_tb3)">
            <arg name="robot_name" value="$(arg second_tb3)"/>
            <!-- State publisher -->
            <param name="robot_description" command="$(find xacro)/xacro --inorder $(find turtlebot3_description)/urdf/turtlebot3_$(arg model).urdf.xacro" />
            <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher" output="screen">
                <param name="publish_frequency" type="double" value="50.0" />
                <param name="tf_prefix" value="$(arg robot_name)" />
            </node>
            <!-- URDF Spawner -->              
            <node name="spawn_urdf" pkg="gazebo_ros" type="spawn_model" args="-urdf -model $(arg robot_name) -x $(arg second_tb3_x_pos) -y $(arg second_tb3_y_pos) -z $(arg second_tb3_z_pos) -param robot_description" />
    
            <!-- AMCL -->
            <include file="$(find turtle_follow)/launch/include/amcl.xml">
                <arg name="robot_name"     value="$(arg robot_name)"/>
                <arg name="initial_pose_x" value="$(arg second_tb3_x_pos)"/>
                <arg name="initial_pose_y" value="$(arg second_tb3_y_pos)"/>
                <arg name="initial_pose_a" value="$(arg second_tb3_z_pos)"/>
            </include>
            <!-- move_base -->
            <node pkg="move_base" type="move_base" respawn="false" name="move_base" output="screen">
                <param name="base_local_planner" value="dwa_local_planner/DWAPlannerROS" />
                <rosparam file="$(find pheromone_map)/param/costmap_common_params_$(arg model).yaml" command="load" ns="global_costmap" />
                <rosparam file="$(find pheromone_map)/param/costmap_common_params_$(arg model).yaml" command="load" ns="local_costmap" />
                <rosparam file="$(find pheromone_map)/param/local_costmap_params.yaml" command="load" />
                <rosparam file="$(find pheromone_map)/param/global_costmap_params.yaml" command="load" />
                <rosparam file="$(find pheromone_map)/param/move_base_params.yaml" command="load" />
                <rosparam file="$(find pheromone_map)/param/dwa_local_planner_params_$(arg model).yaml" command="load" />
                
                <!-- Overwrite robot specific paramters -->
                <param name="global_costmap/obstacle_layer/scan/sensor_frame" value="$(arg robot_name)/base_scan" />
                <param name="global_costmap/obstacle_layer/scan/topic" value="/$(arg robot_name)/scan" />
                <param name="global_costmap/robot_base_frame" value="$(arg robot_name)/base_footprint" />
                <param name="local_costmap/obstacle_layer/scan/sensor_frame" value="$(arg robot_name)/base_scan" />
                <param name="local_costmap/obstacle_layer/scan/topic" value="/$(arg robot_name)/scan" />
                <param name="local_costmap/robot_base_frame" value="$(arg robot_name)/base_footprint" />
                <param name="local_costmap/global_frame" value="$(arg robot_name)/odom" />
                <param name="DWAPlannerROS/min_vel_x" value="0.0" if="$(arg move_forward_only)" />
            </node>
        </group>
        <group ns = "$(arg third_tb3)">
            <arg name="robot_name" value="$(arg third_tb3)"/>
            <!-- State publisher -->
            <param name="robot_description" command="$(find xacro)/xacro --inorder $(find turtlebot3_description)/urdf/turtlebot3_$(arg model).urdf.xacro" />
            <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher" output="screen">
                <param name="publish_frequency" type="double" value="50.0" />
                <param name="tf_prefix" value="$(arg robot_name)" />
            </node>
            <!-- URDF Spawner -->              
            <node name="spawn_urdf" pkg="gazebo_ros" type="spawn_model" args="-urdf -model $(arg robot_name) -x $(arg third_tb3_x_pos) -y $(arg third_tb3_y_pos) -z $(arg third_tb3_z_pos) -param robot_description" />
    
            <!-- AMCL -->
            <include file="$(find turtle_follow)/launch/include/amcl.xml">
                <arg name="robot_name"     value="$(arg robot_name)"/>
                <arg name="initial_pose_x" value="$(arg third_tb3_x_pos)"/>
                <arg name="initial_pose_y" value="$(arg third_tb3_y_pos)"/>
                <arg name="initial_pose_a" value="$(arg third_tb3_z_pos)"/>
            </include>
            <!-- move_base -->
            <node pkg="move_base" type="move_base" respawn="false" name="move_base" output="screen">
                <param name="base_local_planner" value="dwa_local_planner/DWAPlannerROS" />
                <rosparam file="$(find pheromone_map)/param/costmap_common_params_$(arg model).yaml" command="load" ns="global_costmap" />
                <rosparam file="$(find pheromone_map)/param/costmap_common_params_$(arg model).yaml" command="load" ns="local_costmap" />
                <rosparam file="$(find pheromone_map)/param/local_costmap_params.yaml" command="load" />
                <rosparam file="$(find pheromone_map)/param/global_costmap_params.yaml" command="load" />
                <rosparam file="$(find pheromone_map)/param/move_base_params.yaml" command="load" />
                <rosparam file="$(find pheromone_map)/param/dwa_local_planner_params_$(arg model).yaml" command="load" />
                
                <!-- Overwrite robot specific paramters -->
                <param name="global_costmap/obstacle_layer/scan/sensor_frame" value="$(arg robot_name)/base_scan" />
                <param name="global_costmap/obstacle_layer/scan/topic" value="/$(arg robot_name)/scan" />
                <param name="global_costmap/robot_base_frame" value="$(arg robot_name)/base_footprint" />
                <param name="local_costmap/obstacle_layer/scan/sensor_frame" value="$(arg robot_name)/base_scan" />
                <param name="local_costmap/obstacle_layer/scan/topic" value="/$(arg robot_name)/scan" />
                <param name="local_costmap/robot_base_frame" value="$(arg robot_name)/base_footprint" />
                <param name="local_costmap/global_frame" value="$(arg robot_name)/odom" />
                <param name="DWAPlannerROS/min_vel_x" value="0.0" if="$(arg move_forward_only)" />
            </node>
        </group>
    
        <!-- rviz -->
        <group if="$(arg open_rviz)"> 
            <node pkg="rviz" type="rviz" name="rviz"/>
        </group>
    
    
    </launch>